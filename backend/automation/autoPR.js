import { Octokit } from "@octokit/rest";

export async function createSecurityPatchPR(owner, repo, branch, fixContent) {
  const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });

  // Commit fix
  const { data: ref } = await octokit.git.getRef({ owner, repo, ref: `heads/${branch}` });
  const commitSHA = ref.object.sha;

  const { data: blob } = await octokit.git.createBlob({
    owner, repo, content: fixContent, encoding: "utf-8"
  });

  const { data: tree } = await octokit.git.createTree({
    owner, repo, base_tree: commitSHA, tree: [
      { path: "contracts/secure_version.sol", mode: "100644", type: "blob", sha: blob.sha }
    ]
  });

  const { data: commit } = await octokit.git.createCommit({
    owner, repo, message: "Automated security fix generated by SEI Sentinel",
    tree: tree.sha, parents: [commitSHA]
  });

  await octokit.git.updateRef({
    owner, repo, ref: `heads/${branch}`, sha: commit.sha
  });

  // Create PR
  await octokit.pulls.create({
    owner, repo, title: "Security Patch (Automated)",
    head: branch, base: "main",
    body: "This PR contains automated security fixes generated by SEI Sentinel."
  });
}
